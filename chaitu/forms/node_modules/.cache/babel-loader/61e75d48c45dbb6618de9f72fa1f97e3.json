{"ast":null,"code":"import _toConsumableArray from \"/Users/apple/mac/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/apple/mac/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/apple/mac/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/apple/mac/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/apple/mac/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/apple/mac/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/apple/mac/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\"; // Import Hamoni Sync\n\nimport Hamoni from \"hamoni-sync\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.handleChange = function (event) {\n      if (event.target.name === \"firstName\") _this.setState({\n        firstName: event.target.value\n      });\n      if (event.target.name === \"lastName\") _this.setState({\n        lastName: event.target.value\n      });\n    };\n\n    _this.handleSubmit = function (event) {\n      _this.listPrimitive.push({\n        firstName: _this.state.firstName,\n        lastName: _this.state.lastName\n      });\n\n      _this.setState({\n        firstName: \"\",\n        lastName: \"\"\n      });\n\n      event.preventDefault();\n    };\n\n    _this.renderEditable = function (cellInfo) {\n      return React.createElement(\"div\", {\n        style: {\n          backgroundColor: \"#fafafa\"\n        },\n        contentEditable: true,\n        suppressContentEditableWarning: true,\n        onBlur: function onBlur(e) {\n          var data = _toConsumableArray(_this.state.data);\n\n          data[cellInfo.index][cellInfo.column.id] = e.target.innerHTML;\n\n          _this.setState({\n            data: data\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      });\n    };\n\n    _this.state = {\n      data: [],\n      firstName: \"\",\n      lastName: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var data = this.state.data;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"App-intro\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Add new record\"), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"FirstName:\", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"firstName\",\n        value: this.state.firstName,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })), \" \", React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"LastName:\", React.createElement(\"input\", {\n        type: \"text\",\n        name: \"lastName\",\n        value: this.state.lastName,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"const Hamoni = require(\\\"hamoni-sync\\\"); let hamoni = new Hamoni(\\\"AccountID\\\", \\\"APP_ID\\\"); hamoni .connect() .then(response => \", hamoni.createList(\"datagrid\", [{\n        firstName: \"James\",\n        lastName: \"Darwin\"\n      }, {\n        firstName: \"Jimmy\",\n        lastName: \"August\"\n      }]).then(function () {\n        return console.log(\"create success\");\n      }).catch(console.log), \") .catch(console.log);\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(ReactTable, {\n        data: data,\n        columns: [{\n          Header: \"First Name\",\n          accessor: \"firstName\",\n          Cell: this.renderEditable\n        }, {\n          Header: \"Last Name\",\n          accessor: \"lastName\",\n          Cell: this.renderEditable\n        }, {\n          Header: \"Full Name\",\n          id: \"full\",\n          accessor: function accessor(d) {\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 108\n              },\n              __self: this\n            });\n          }\n        }],\n        defaultPageSize: 10,\n        className: \"-striped -highlight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/apple/mac/src/App.js"],"names":["React","Component","ReactTable","Hamoni","App","handleChange","event","target","name","setState","firstName","value","lastName","handleSubmit","listPrimitive","push","state","preventDefault","renderEditable","cellInfo","backgroundColor","e","data","index","column","id","innerHTML","hamoni","createList","then","console","log","catch","Header","accessor","Cell","d"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\n// Import Hamoni Sync\nimport Hamoni from \"hamoni-sync\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [],\n      firstName: \"\",\n      lastName: \"\"\n    };\n  }\n  handleChange = event => {\n    if (event.target.name === \"firstName\")\n      this.setState({ firstName: event.target.value });\n    if (event.target.name === \"lastName\")\n      this.setState({ lastName: event.target.value });\n  };\n\n  handleSubmit = event => {\n    this.listPrimitive.push({\n      firstName: this.state.firstName,\n      lastName: this.state.lastName\n    });\n    this.setState({ firstName: \"\", lastName: \"\" });\n    event.preventDefault();\n  };\n  renderEditable = cellInfo => {\n    return (\n      <div\n        style={{ backgroundColor: \"#fafafa\" }}\n        contentEditable\n        suppressContentEditableWarning\n        onBlur={e => {\n          const data = [...this.state.data];\n          data[cellInfo.index][cellInfo.column.id] = e.target.innerHTML;\n          this.setState({ data });\n        }}\n\n      />\n    );\n  };\n  render() {\n    const { data } = this.state;\n    return (\n      <div className=\"App\">\n        <p className=\"App-intro\">\n          <form onSubmit={this.handleSubmit}>\n            <h3>Add new record</h3>\n            <label>\n              FirstName:\n              <input\n                type=\"text\"\n                name=\"firstName\"\n                value={this.state.firstName}\n                onChange={this.handleChange}\n              />\n            </label>{\" \"}\n            <label>\n              LastName:\n              <input\n                type=\"text\"\n                name=\"lastName\"\n                value={this.state.lastName}\n                onChange={this.handleChange}\n              />\n            </label>\n            <input type=\"submit\" value=\"Add\" />\n          </form>\n        </p>\n        <div>\n        const Hamoni = require(\"hamoni-sync\");\nlet hamoni = new Hamoni(\"AccountID\", \"APP_ID\");\nhamoni\n  .connect()\n  .then(response => {\n          hamoni\n            .createList(\"datagrid\", [\n              { firstName: \"James\", lastName: \"Darwin\" },\n              { firstName: \"Jimmy\", lastName: \"August\" }\n            ])\n            .then(() => console.log(\"create success\"))\n            .catch(console.log)\n        })\n        .catch(console.log);\n        </div>\n        <div>\n          <ReactTable\n            data={data}\n            columns={[\n              {\n                Header: \"First Name\",\n                accessor: \"firstName\",\n                Cell: this.renderEditable\n              },\n              {\n                Header: \"Last Name\",\n                accessor: \"lastName\",\n                Cell: this.renderEditable\n              },\n              {\n                Header: \"Full Name\",\n                id: \"full\",\n                accessor: d => (\n                  <div\n\n                  />\n                )\n              }\n            ]}\n            defaultPageSize={10}\n            className=\"-striped -highlight\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}