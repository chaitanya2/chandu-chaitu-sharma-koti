{"ast":null,"code":"var _jsxFileName = \"/Users/apple/mac/src/App.js\";\nimport React, { Component } from 'react';\nimport { Table } from 'antd';\nvar columns = [{\n  title: 'Name',\n  dataIndex: 'name',\n  render: function render(text) {\n    return React.createElement(\"a\", {\n      href: \"javascript:;\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, text);\n  }\n}, {\n  title: 'Age',\n  dataIndex: 'age'\n}, {\n  title: 'Address',\n  dataIndex: 'address'\n}];\nvar data = [{\n  key: '1',\n  name: 'John Brown',\n  age: 32,\n  address: 'New York No. 1 Lake Park'\n}, {\n  key: '2',\n  name: 'Jim Green',\n  age: 42,\n  address: 'London No. 1 Lake Park'\n}, {\n  key: '3',\n  name: 'Joe Black',\n  age: 32,\n  address: 'Sidney No. 1 Lake Park'\n}, {\n  key: '4',\n  name: 'Disabled User',\n  age: 99,\n  address: 'Sidney No. 1 Lake Park'\n}]; // rowSelection object indicates the need for row selection\n\nvar rowSelection = {\n  onChange: function onChange(selectedRowKeys, selectedRows) {\n    console.log(\"selectedRowKeys: \".concat(selectedRowKeys), 'selectedRows: ', selectedRows);\n  },\n  getCheckboxProps: function getCheckboxProps(record) {\n    return {\n      disabled: record.name === 'Disabled User',\n      // Column configuration not to be checked\n      name: record.name\n    };\n  }\n};\nReactDOM.render(React.createElement(Table, {\n  rowSelection: rowSelection,\n  columns: columns,\n  dataSource: data,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}), mountNode);\nexport default App;","map":{"version":3,"sources":["/Users/apple/mac/src/App.js"],"names":["React","Component","Table","columns","title","dataIndex","render","text","data","key","name","age","address","rowSelection","onChange","selectedRowKeys","selectedRows","console","log","getCheckboxProps","record","disabled","ReactDOM","mountNode","App"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,QAAsB,MAAtB;AAEA,IAAMC,OAAO,GAAG,CAAC;AACfC,EAAAA,KAAK,EAAE,MADQ;AAEfC,EAAAA,SAAS,EAAE,MAFI;AAGfC,EAAAA,MAAM,EAAE,gBAAAC,IAAI;AAAA,WAAI;AAAG,MAAA,IAAI,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBA,IAAxB,CAAJ;AAAA;AAHG,CAAD,EAIb;AACDH,EAAAA,KAAK,EAAE,KADN;AAEDC,EAAAA,SAAS,EAAE;AAFV,CAJa,EAOb;AACDD,EAAAA,KAAK,EAAE,SADN;AAEDC,EAAAA,SAAS,EAAE;AAFV,CAPa,CAAhB;AAWA,IAAMG,IAAI,GAAG,CAAC;AACZC,EAAAA,GAAG,EAAE,GADO;AAEZC,EAAAA,IAAI,EAAE,YAFM;AAGZC,EAAAA,GAAG,EAAE,EAHO;AAIZC,EAAAA,OAAO,EAAE;AAJG,CAAD,EAKV;AACDH,EAAAA,GAAG,EAAE,GADJ;AAEDC,EAAAA,IAAI,EAAE,WAFL;AAGDC,EAAAA,GAAG,EAAE,EAHJ;AAIDC,EAAAA,OAAO,EAAE;AAJR,CALU,EAUV;AACDH,EAAAA,GAAG,EAAE,GADJ;AAEDC,EAAAA,IAAI,EAAE,WAFL;AAGDC,EAAAA,GAAG,EAAE,EAHJ;AAIDC,EAAAA,OAAO,EAAE;AAJR,CAVU,EAeV;AACDH,EAAAA,GAAG,EAAE,GADJ;AAEDC,EAAAA,IAAI,EAAE,eAFL;AAGDC,EAAAA,GAAG,EAAE,EAHJ;AAIDC,EAAAA,OAAO,EAAE;AAJR,CAfU,CAAb,C,CAsBA;;AACA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,kBAACC,eAAD,EAAkBC,YAAlB,EAAmC;AAC3CC,IAAAA,OAAO,CAACC,GAAR,4BAAgCH,eAAhC,GAAmD,gBAAnD,EAAqEC,YAArE;AACD,GAHkB;AAInBG,EAAAA,gBAAgB,EAAE,0BAAAC,MAAM;AAAA,WAAK;AAC3BC,MAAAA,QAAQ,EAAED,MAAM,CAACV,IAAP,KAAgB,eADC;AACgB;AAC3CA,MAAAA,IAAI,EAAEU,MAAM,CAACV;AAFc,KAAL;AAAA;AAJL,CAArB;AAUAY,QAAQ,CAAChB,MAAT,CACE,oBAAC,KAAD;AAAO,EAAA,YAAY,EAAEO,YAArB;AAAmC,EAAA,OAAO,EAAEV,OAA5C;AAAqD,EAAA,UAAU,EAAEK,IAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEe,SAFF;AAKE,eAAeC,GAAf","sourcesContent":["import React, { Component, } from 'react';\nimport { Table } from 'antd';\n\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name',\n  render: text => <a href=\"javascript:;\">{text}</a>,\n}, {\n  title: 'Age',\n  dataIndex: 'age',\n}, {\n  title: 'Address',\n  dataIndex: 'address',\n}];\nconst data = [{\n  key: '1',\n  name: 'John Brown',\n  age: 32,\n  address: 'New York No. 1 Lake Park',\n}, {\n  key: '2',\n  name: 'Jim Green',\n  age: 42,\n  address: 'London No. 1 Lake Park',\n}, {\n  key: '3',\n  name: 'Joe Black',\n  age: 32,\n  address: 'Sidney No. 1 Lake Park',\n}, {\n  key: '4',\n  name: 'Disabled User',\n  age: 99,\n  address: 'Sidney No. 1 Lake Park',\n}];\n\n// rowSelection object indicates the need for row selection\nconst rowSelection = {\n  onChange: (selectedRowKeys, selectedRows) => {\n    console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n  },\n  getCheckboxProps: record => ({\n    disabled: record.name === 'Disabled User', // Column configuration not to be checked\n    name: record.name,\n  }),\n};\n\nReactDOM.render(\n  <Table rowSelection={rowSelection} columns={columns} dataSource={data} />,\n  mountNode\n);\n\n  export default App;\n\n"]},"metadata":{},"sourceType":"module"}